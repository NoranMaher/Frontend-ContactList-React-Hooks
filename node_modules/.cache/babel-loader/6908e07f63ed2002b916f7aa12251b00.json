{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/GlobalState.js\";\nimport React, { createContext, useEffect, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst fetchData = async () => {\n  const fetchedData = await axios.get(\"./contacts.json\");\n  const data = fetchedData.data.data;\n  return data;\n};\n\nuseEffect(() => {\n  console.log(fetchData());\n}, []);\nconst initialState = {\n  contacts: fetchData()\n}; // Create Context\n\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  const getContacts = contacts => {\n    dispatch({\n      type: \"GET_CONTACTS\",\n      payload: contacts\n    });\n  };\n\n  const removeContact = id => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id\n    });\n  };\n\n  const addContact = contact => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact\n    });\n  };\n\n  const editContact = contact => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      getContacts,\n      removeContact,\n      addContact,\n      editContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/GlobalState.js"],"names":["React","createContext","useEffect","useReducer","AppReducer","axios","fetchData","fetchedData","get","data","console","log","initialState","contacts","GlobalContext","GlobalProvider","children","state","dispatch","getContacts","type","payload","removeContact","id","addContact","contact","editContact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,UAA1C,QAA4D,OAA5D;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC5B,QAAMC,WAAW,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,iBAAV,CAA1B;AACA,QAAMC,IAAI,GAAGF,WAAW,CAACE,IAAZ,CAAiBA,IAA9B;AACA,SAAOA,IAAP;AACD,CAJD;;AAKAP,SAAS,CAAC,MAAM;AACdQ,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,EAArB;AACD,CAFQ,EAEN,EAFM,CAAT;AAGA,MAAMM,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEP,SAAS;AADA,CAArB,C,CAIA;;AACA,OAAO,MAAMQ,aAAa,GAAGb,aAAa,CAACW,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACC,UAAD,EAAaQ,YAAb,CAApC,CAD8C,CAG9C;;AACA,QAAMO,WAAW,GAAIN,QAAD,IAAc;AAChCK,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAER;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMS,aAAa,GAAIC,EAAD,IAAQ;AAC5BL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC9BP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,WAAW,GAAID,OAAD,IAAa;AAC/BP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GALD;;AAMA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QADX;AAELM,MAAAA,WAFK;AAGLG,MAAAA,aAHK;AAILE,MAAAA,UAJK;AAKLE,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGV,QATH,CADF;AAaD,CA5CM","sourcesContent":["import React, { createContext, useEffect, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst fetchData = async () => {\n  const fetchedData = await axios.get(\"./contacts.json\");\n  const data = fetchedData.data.data;\n  return data;\n};\nuseEffect(() => {\n  console.log(fetchData());\n}, []);\nconst initialState = {\n  contacts: fetchData(),\n};\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  const getContacts = (contacts) => {\n    dispatch({\n      type: \"GET_CONTACTS\",\n      payload: contacts,\n    });\n  };\n\n  const removeContact = (id) => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id,\n    });\n  };\n\n  const addContact = (contact) => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  const editContact = (contact) => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact,\n    });\n  };\n  return (\n    <GlobalContext.Provider\n      value={{\n        contacts: state.contacts,\n        getContacts,\n        removeContact,\n        addContact,\n        editContact,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}