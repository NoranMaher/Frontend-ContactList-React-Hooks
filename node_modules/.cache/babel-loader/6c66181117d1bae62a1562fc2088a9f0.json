{"ast":null,"code":"export default ((state, action) => {\n  switch (action.type) {\n    case \"REMOVE_CONTACT\":\n      return { ...state,\n        contacts: state.contacts.data.filter(contact => {\n          return contact.id !== action.payload;\n        })\n      };\n\n    case \"GET_CONTACTS\":\n      return { ...state,\n        contacts: action.payload\n      };\n\n    case \"ADD_CONTACT\":\n      return { ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case \"EDIT_CONTACT\":\n      const updateContact = action.payload;\n      const updateContacts = state.contacts.data.map(contact => {\n        if (contact.id === updateContact.id) {\n          return updateContact;\n        }\n\n        return contact;\n      });\n      return { ...state,\n        contacts: updateContacts\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/AppReducer.js"],"names":["state","action","type","contacts","data","filter","contact","id","payload","updateContact","updateContacts","map"],"mappings":"AAAA,gBAAe,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA4BC,OAAD,IAAa;AAChD,iBAAOA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACO,OAA7B;AACD,SAFS;AAFL,OAAP;;AAMF,SAAK,cAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACO;AAFZ,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELG,QAAAA,QAAQ,EAAE,CAACF,MAAM,CAACO,OAAR,EAAiB,GAAGR,KAAK,CAACG,QAA1B;AAFL,OAAP;;AAIF,SAAK,cAAL;AACE,YAAMM,aAAa,GAAGR,MAAM,CAACO,OAA7B;AACA,YAAME,cAAc,GAAGV,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBO,GAApB,CAAyBL,OAAD,IAAa;AAC1D,YAAIA,OAAO,CAACC,EAAR,KAAeE,aAAa,CAACF,EAAjC,EAAqC;AACnC,iBAAOE,aAAP;AACD;;AACD,eAAOH,OAAP;AACD,OALsB,CAAvB;AAMA,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,QAAQ,EAAEO;AAFL,OAAP;;AAKF;AACE,aAAOV,KAAP;AAhCJ;AAkCD,CAnCD","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"REMOVE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.data.filter((contact) => {\n          return contact.id !== action.payload;\n        }),\n      };\n    case \"GET_CONTACTS\":\n      return {\n        ...state,\n        contacts: action.payload,\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case \"EDIT_CONTACT\":\n      const updateContact = action.payload;\n      const updateContacts = state.contacts.data.map((contact) => {\n        if (contact.id === updateContact.id) {\n          return updateContact;\n        }\n        return contact;\n      });\n      return {\n        ...state,\n        contacts: updateContacts,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}