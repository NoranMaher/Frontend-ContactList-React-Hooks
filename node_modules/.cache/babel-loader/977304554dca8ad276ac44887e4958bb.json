{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const {\n    contacts,\n    getContacts\n  } = useContext(GlobalContext); // const fetchData = () => {\n  //   axios.get(\"./contacts.json\").then(function (response) {\n  //     setContacts(response.data.data);\n  //   });\n  // };\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n  // useEffect(() => {\n  //   setUniqueLetters(\n  //     Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n  //   );\n  // }, [contacts]);\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setFetchedContacts(selectedContacts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, uniqueLetters.map((letter, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      onClick: handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, letter);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, contacts.map((contactItem, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      userId: contactItem.id,\n      name: contactItem.fullName,\n      email: contactItem.emailAddress,\n      phone: contactItem.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","useContext","axios","Card","GlobalContext","ContactList","uniqueLetters","setUniqueLetters","fetchedContacts","setFetchedContacts","searchText","setSearchText","loading","SetLoading","contacts","getContacts","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","filter","contactItem","fullName","charAt","map","letter","i","id","emailAddress","phoneNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4Bd,UAAU,CAACG,aAAD,CAA5C,CALwB,CAOxB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAoBC,SAA3C;AACA,QAAIC,gBAAgB,GAAGP,QAAQ,CAACQ,MAAT,CAAgB,UAAUC,WAAV,EAAuB;AAC5D,aAAOA,WAAW,CAACC,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,KAAkCP,cAAzC;AACD,KAFsB,CAAvB;AAGAT,IAAAA,kBAAkB,CAACY,gBAAD,CAAlB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,aAAa,CAACoB,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,KAAe;AAChC,wBACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,MAAA,OAAO,EAAEZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGW,MADH,CADF;AAKD,GANA,CADH,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QAAQ,CAACY,GAAT,CAAa,CAACH,WAAD,EAAcK,CAAd,KAAoB;AAChC,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,MAAM,EAAEL,WAAW,CAACM,EAFtB;AAGE,MAAA,IAAI,EAAEN,WAAW,CAACC,QAHpB;AAIE,MAAA,KAAK,EAAED,WAAW,CAACO,YAJrB;AAKE,MAAA,KAAK,EAAEP,WAAW,CAACQ,WALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CADH,CAVF,CADF;AA0BD,CAzDD;;AA2DA,eAAe1B,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { GlobalContext } from \"../context/GlobalState\";\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const { contacts, getContacts } = useContext(GlobalContext);\n\n  // const fetchData = () => {\n  //   axios.get(\"./contacts.json\").then(function (response) {\n  //     setContacts(response.data.data);\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n\n  // useEffect(() => {\n  //   setUniqueLetters(\n  //     Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n  //   );\n  // }, [contacts]);\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setFetchedContacts(selectedContacts);\n  };\n\n  return (\n    <div className=\"contact-list\">\n      <ul>\n        {uniqueLetters.map((letter, i) => {\n          return (\n            <li key={i} onClick={handleFilter}>\n              {letter}\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"list-wrapper\">\n        {contacts.map((contactItem, i) => {\n          return (\n            <Card\n              key={i}\n              userId={contactItem.id}\n              name={contactItem.fullName}\n              email={contactItem.emailAddress}\n              phone={contactItem.phoneNumber}\n            ></Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}