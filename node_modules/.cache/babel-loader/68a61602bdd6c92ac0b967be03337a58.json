{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nconst initialState = {\n  contacts: [],\n  setContacts: contacts => null\n};\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  useEffect(() => {\n    axios.get(\"/contacts.json\").then(response => GlobalContext.setContacts(response.data)).catch(error => console.log(error));\n  }, []);\n  const [state, dispatch] = useReducer(AppReducer, GlobalContext.contacts);\n  console.log(initialState); // Actions\n\n  const removeContact = id => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id\n    });\n  };\n\n  const addContact = contact => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact\n    });\n  };\n\n  const editContact = contact => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      removeContact,\n      addContact,\n      editContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","initialState","contacts","setContacts","GlobalContext","GlobalProvider","children","get","then","response","data","catch","error","console","log","state","dispatch","removeContact","id","type","payload","addContact","contact","editContact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAGD,QAAD,IAAc;AAFR,CAArB;AAKA,OAAO,MAAME,aAAa,GAAGT,aAAa,CAACM,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9CT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFO,GADH,CACO,gBADP,EAEGC,IAFH,CAESC,QAAD,IAAcL,aAAa,CAACD,WAAd,CAA0BM,QAAQ,CAACC,IAAnC,CAFtB,EAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB;AAID,GALQ,EAKN,EALM,CAAT;AAOA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACG,UAAD,EAAaK,aAAa,CAACF,QAA3B,CAApC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYb,YAAZ,EAT8C,CAU9C;;AAEA,QAAMgB,aAAa,GAAIC,EAAD,IAAQ;AAC5BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,UAAU,GAAIC,OAAD,IAAa;AAC9BN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,WAAW,GAAID,OAAD,IAAa;AAC/BN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,QAAQ,EAAEa,KAAK,CAACb,QADX;AAELe,MAAAA,aAFK;AAGLI,MAAAA,UAHK;AAILE,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGjB,QARH,CADF;AAYD,CA7CM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst initialState = {\n  contacts: [],\n  setContacts: (contacts) => null,\n};\n\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  useEffect(() => {\n    axios\n      .get(\"/contacts.json\")\n      .then((response) => GlobalContext.setContacts(response.data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  const [state, dispatch] = useReducer(AppReducer, GlobalContext.contacts);\n  console.log(initialState);\n  // Actions\n\n  const removeContact = (id) => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id,\n    });\n  };\n\n  const addContact = (contact) => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  const editContact = (contact) => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        contacts: state.contacts,\n        removeContact,\n        addContact,\n        editContact,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}