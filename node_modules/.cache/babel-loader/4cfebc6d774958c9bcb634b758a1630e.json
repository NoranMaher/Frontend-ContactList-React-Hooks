{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\"; // Initial State\n\nconst initialState = {\n  users: []\n}; // Create Context\n\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  const getContacts = () => {\n    dispatch({\n      type: \"GET_CONTACTS\"\n    });\n  };\n\n  const removeUser = id => {\n    dispatch({\n      type: \"REMOVE_USER\",\n      payload: id\n    });\n  };\n\n  const addUser = user => {\n    dispatch({\n      type: \"ADD_USER\",\n      payload: user\n    });\n  };\n\n  const editUser = user => {\n    dispatch({\n      type: \"EDIT_USER\",\n      payload: user\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      users: state.users,\n      removeUser,\n      addUser,\n      editUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","users","GlobalContext","GlobalProvider","children","state","dispatch","getContacts","type","removeUser","id","payload","addUser","user","editUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB,C,CAIA;;AACA,OAAO,MAAMC,aAAa,GAAGL,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC,CAD8C,CAG9C;;AACA,QAAMO,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACzBJ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,aADC;AAEPG,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAME,OAAO,GAAIC,IAAD,IAAU;AACxBP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,UADC;AAEPG,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,QAAQ,GAAID,IAAD,IAAU;AACzBP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,WADC;AAEPG,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELQ,MAAAA,UAFK;AAGLG,MAAAA,OAHK;AAILE,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGV,QARH,CADF;AAYD,CA3CM","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// Initial State\nconst initialState = {\n  users: [],\n};\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  const getContacts = () => {\n    dispatch({\n      type: \"GET_CONTACTS\",\n    });\n  };\n\n  const removeUser = (id) => {\n    dispatch({\n      type: \"REMOVE_USER\",\n      payload: id,\n    });\n  };\n\n  const addUser = (user) => {\n    dispatch({\n      type: \"ADD_USER\",\n      payload: user,\n    });\n  };\n\n  const editUser = (user) => {\n    dispatch({\n      type: \"EDIT_USER\",\n      payload: user,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        users: state.users,\n        removeUser,\n        addUser,\n        editUser,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}