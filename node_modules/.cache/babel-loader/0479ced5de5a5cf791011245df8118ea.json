{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"../components/Card\"; // import { ContactsContext } from \"../context/index\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const {\n    contacts,\n    search\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    if (!contacts) return;\n    let contactList = contacts.data;\n    setFetchedContacts(contactList); // setUniqueLetters(\n    //   Array.from(\n    //     new Set(fetchedContacts.map((name) => name.fullName.charAt(0)))\n    //   )\n    // );\n  }, [contacts.data]); // useEffect(() => {\n  //   if (!contacts) return;\n  //   console.log(contacts);\n  //   let contactList = contacts.data;\n  //   setFetchedContacts(contactList);\n  //   setUniqueLetters(\n  //     Array.from(\n  //       new Set(fetchedContacts.map((name) => name.fullName.charAt(0)))\n  //     )\n  //   );\n  // }, [contacts]);\n  // useEffect(() => {\n  //   if (!contacts) return;\n  //   let contactList = contacts.data;\n  //   let selectedContacts = contactList.filter(function (contactItem) {\n  //     return contactItem.fullName.toLowerCase().includes(search);\n  //   });\n  //   setFetchedContacts(selectedContacts);\n  // }, [search]);\n  // const handleFilter = (event) => {\n  //   const selectedLetter = event.currentTarget.innerText;\n  //   var selectedContacts = contacts.filter(function (contactItem) {\n  //     return contactItem.fullName.charAt(0) == selectedLetter;\n  //   });\n  //   setFetchedContacts(selectedContacts);\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, fetchedContacts ? fetchedContacts.map((contactItem, i) => /*#__PURE__*/React.createElement(Card, {\n    key: i,\n    userId: contactItem.id,\n    name: contactItem.fullName,\n    email: contactItem.emailAddress,\n    phone: contactItem.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })) : \"Loading\"));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","useContext","Card","GlobalContext","ContactList","uniqueLetters","setUniqueLetters","fetchedContacts","setFetchedContacts","searchText","setSearchText","loading","SetLoading","contacts","search","contactList","data","map","contactItem","i","id","fullName","emailAddress","phoneNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAEa,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBb,UAAU,CAACE,aAAD,CAAvC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,QAAL,EAAe;AACf,QAAIE,WAAW,GAAGF,QAAQ,CAACG,IAA3B;AACAR,IAAAA,kBAAkB,CAACO,WAAD,CAAlB,CAHc,CAKd;AACA;AACA;AACA;AACA;AACD,GAVQ,EAUN,CAACF,QAAQ,CAACG,IAAV,CAVM,CAAT,CARwB,CAoBxB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,eAAe,GACZA,eAAe,CAACU,GAAhB,CAAoB,CAACC,WAAD,EAAcC,CAAd,kBAClB,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,MAAM,EAAED,WAAW,CAACE,EAFtB;AAGE,IAAA,IAAI,EAAEF,WAAW,CAACG,QAHpB;AAIE,IAAA,KAAK,EAAEH,WAAW,CAACI,YAJrB;AAKE,IAAA,KAAK,EAAEJ,WAAW,CAACK,WALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,GAUZ,SAXN,CANF,CADF;AAsBD,CAxED;;AA0EA,eAAenB,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"../components/Card\";\n// import { ContactsContext } from \"../context/index\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n\n  const { contacts, search } = useContext(GlobalContext);\n\n  useEffect(() => {\n    if (!contacts) return;\n    let contactList = contacts.data;\n    setFetchedContacts(contactList);\n\n    // setUniqueLetters(\n    //   Array.from(\n    //     new Set(fetchedContacts.map((name) => name.fullName.charAt(0)))\n    //   )\n    // );\n  }, [contacts.data]);\n\n  // useEffect(() => {\n  //   if (!contacts) return;\n  //   console.log(contacts);\n  //   let contactList = contacts.data;\n  //   setFetchedContacts(contactList);\n\n  //   setUniqueLetters(\n  //     Array.from(\n  //       new Set(fetchedContacts.map((name) => name.fullName.charAt(0)))\n  //     )\n  //   );\n  // }, [contacts]);\n\n  // useEffect(() => {\n  //   if (!contacts) return;\n  //   let contactList = contacts.data;\n  //   let selectedContacts = contactList.filter(function (contactItem) {\n  //     return contactItem.fullName.toLowerCase().includes(search);\n  //   });\n  //   setFetchedContacts(selectedContacts);\n  // }, [search]);\n\n  // const handleFilter = (event) => {\n  //   const selectedLetter = event.currentTarget.innerText;\n  //   var selectedContacts = contacts.filter(function (contactItem) {\n  //     return contactItem.fullName.charAt(0) == selectedLetter;\n  //   });\n  //   setFetchedContacts(selectedContacts);\n  // };\n\n  return (\n    <div className=\"contact-list\">\n      {/* <ul>\n        {contacts\n          ? uniqueLetters.map((letter, i) => <li key={i}>{letter}</li>)\n          : \"Loading\"}\n      </ul> */}\n      <div className=\"list-wrapper\">\n        {fetchedContacts\n          ? fetchedContacts.map((contactItem, i) => (\n              <Card\n                key={i}\n                userId={contactItem.id}\n                name={contactItem.fullName}\n                email={contactItem.emailAddress}\n                phone={contactItem.phoneNumber}\n              ></Card>\n            ))\n          : \"Loading\"}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}