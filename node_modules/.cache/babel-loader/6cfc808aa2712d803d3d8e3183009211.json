{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/EditContact.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Title from \"../components/Title\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst EditContact = props => {\n  const {\n    editContact,\n    contacts\n  } = useContext(GlobalContext);\n  const [selectedContact, setSelectedContact] = useState({\n    id: \"\",\n    fullName: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\"\n  });\n  const history = useHistory();\n  const currentContactId = props.match.params.id;\n  useEffect(() => {\n    if (!contacts) return;\n    let contactList = contacts.data;\n    const contactId = currentContactId;\n    const selectedContact = contactList.find(contact => contact.id === contactId);\n    setSelectedContact(selectedContact);\n  }, [currentContactId, contacts]);\n\n  const onChangeName = e => {\n    setSelectedContact({ ...selectedContact,\n      [e.target.fullName]: e.target.value\n    });\n  };\n\n  const onChangephone = e => {\n    setSelectedContact({ ...selectedContact,\n      [e.target.phoneNumber]: e.target.value\n    });\n  };\n\n  const onChangeemail = e => {\n    setSelectedContact({ ...selectedContact,\n      [e.target.emailAddress]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    editContact(selectedContact);\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n    content: \"Edit Contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: selectedContact.fullName,\n    onChange: onChange,\n    name: \"name\",\n    placeholder: \"Enter user\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    value: selectedContact.emailAddress,\n    onChange: onChangeemail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"tel\",\n    value: selectedContact.phoneNumber,\n    onChange: onChangephone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Edit Contact\")));\n};\n\nexport default EditContact;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/EditContact.js"],"names":["React","useEffect","useState","useContext","Title","Form","FormGroup","Label","Input","Button","Link","useHistory","GlobalContext","EditContact","props","editContact","contacts","selectedContact","setSelectedContact","id","fullName","emailAddress","phoneNumber","history","currentContactId","match","params","contactList","data","contactId","find","contact","onChangeName","e","target","value","onChangephone","onChangeemail","onSubmit","preventDefault","push","onChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport Title from \"../components/Title\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst EditContact = (props) => {\n  const { editContact, contacts } = useContext(GlobalContext);\n  const [selectedContact, setSelectedContact] = useState({\n    id: \"\",\n    fullName: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\",\n  });\n  const history = useHistory();\n  const currentContactId = props.match.params.id;\n\n  useEffect(() => {\n    if (!contacts) return;\n    let contactList = contacts.data;\n    const contactId = currentContactId;\n    const selectedContact = contactList.find(\n      (contact) => contact.id === contactId\n    );\n    setSelectedContact(selectedContact);\n  }, [currentContactId, contacts]);\n\n  const onChangeName = (e) => {\n    setSelectedContact({\n      ...selectedContact,\n      [e.target.fullName]: e.target.value,\n    });\n  };\n  const onChangephone = (e) => {\n    setSelectedContact({\n      ...selectedContact,\n      [e.target.phoneNumber]: e.target.value,\n    });\n  };\n\n  const onChangeemail = (e) => {\n    setSelectedContact({\n      ...selectedContact,\n      [e.target.emailAddress]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    editContact(selectedContact);\n    history.push(\"/\");\n  };\n  return (\n    <>\n      <Title content=\"Edit Contact\" />\n      <Form onSubmit={onSubmit}>\n        <FormGroup>\n          <Label>Name</Label>\n          <Input\n            type=\"text\"\n            value={selectedContact.fullName}\n            onChange={onChange}\n            name=\"name\"\n            placeholder=\"Enter user\"\n            required\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Label>Email Address</Label>\n          <Input\n            type=\"email\"\n            value={selectedContact.emailAddress}\n            onChange={onChangeemail}\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Label>Phone Number</Label>\n          <Input\n            type=\"tel\"\n            value={selectedContact.phoneNumber}\n            onChange={onChangephone}\n          ></Input>\n        </FormGroup>\n        <Button type=\"submit\">Edit Contact</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default EditContact;\n"]},"metadata":{},"sourceType":"module"}