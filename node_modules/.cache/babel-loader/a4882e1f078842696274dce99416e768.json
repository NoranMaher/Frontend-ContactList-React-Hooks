{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"../components/Card\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const {\n    contacts\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    console.log(contacts);\n    setFetchedContacts(contacts);\n  }, [contacts]);\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setFetchedContacts(selectedContacts);\n  }; // useEffect(() => {\n  //   setUniqueLetters(\n  //     Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n  //   );\n  // }, [fetchedContacts]);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, fetchedContacts.map((contactItem, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      userId: contactItem.id,\n      name: contactItem.fullName,\n      email: contactItem.emailAddress,\n      phone: contactItem.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","useContext","Card","GlobalContext","ContactList","uniqueLetters","setUniqueLetters","fetchedContacts","setFetchedContacts","searchText","setSearchText","loading","SetLoading","contacts","console","log","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","filter","contactItem","fullName","charAt","map","i","id","emailAddress","phoneNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAeZ,UAAU,CAACE,aAAD,CAA/B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,IAAAA,kBAAkB,CAACK,QAAD,CAAlB;AACD,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;;AAKA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAoBC,SAA3C;AACA,QAAIC,gBAAgB,GAAGR,QAAQ,CAACS,MAAT,CAAgB,UAAUC,WAAV,EAAuB;AAC5D,aAAOA,WAAW,CAACC,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,KAAkCP,cAAzC;AACD,KAFsB,CAAvB;AAGAV,IAAAA,kBAAkB,CAACa,gBAAD,CAAlB;AACD,GAND,CAXwB,CAmBxB;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,eAAe,CAACmB,GAAhB,CAAoB,CAACH,WAAD,EAAcI,CAAd,KAAoB;AACvC,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,MAAM,EAAEJ,WAAW,CAACK,EAFtB;AAGE,MAAA,IAAI,EAAEL,WAAW,CAACC,QAHpB;AAIE,MAAA,KAAK,EAAED,WAAW,CAACM,YAJrB;AAKE,MAAA,KAAK,EAAEN,WAAW,CAACO,WALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CADH,CAVF,CADF;AA0BD,CAlDD;;AAoDA,eAAe1B,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport Card from \"../components/Card\";\nimport { GlobalContext } from \"../context/GlobalState\";\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const { contacts } = useContext(GlobalContext);\n  useEffect(() => {\n    console.log(contacts);\n    setFetchedContacts(contacts);\n  }, [contacts]);\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setFetchedContacts(selectedContacts);\n  };\n\n  // useEffect(() => {\n  //   setUniqueLetters(\n  //     Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n  //   );\n  // }, [fetchedContacts]);\n  return (\n    <div className=\"contact-list\">\n      <ul>\n        {/* {uniqueLetters.map((letter, i) => {\n          return (\n            <li key={i} onClick={handleFilter}>\n              {letter}\n            </li>\n          );\n        })} */}\n      </ul>\n      <div className=\"list-wrapper\">\n        {fetchedContacts.map((contactItem, i) => {\n          return (\n            <Card\n              key={i}\n              userId={contactItem.id}\n              name={contactItem.fullName}\n              email={contactItem.emailAddress}\n              phone={contactItem.phoneNumber}\n            ></Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}