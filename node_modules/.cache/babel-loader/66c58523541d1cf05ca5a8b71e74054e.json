{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\n\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [loading, SetLoading] = useState(false);\n\n  const getUniqueLetter = () => {\n    const filter = contacts.reduce((result, {\n      fullName\n    }) => [...result, ...(!result.includes(fullName.charAt(0)) ? [fullName.charAt(0)] : [])], []);\n    return filter;\n  };\n\n  const fetchData = () => {\n    const result = axios.get(\"./contacts.json\").then(function (response) {\n      setContacts(response.data.data);\n      setUniqueLetters(getUniqueLetter());\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log(uniqueLetters);\n  });\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title title_underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Contacts\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, uniqueLetters.map((letter, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      onClick: handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, letter);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, contacts.map((contactItem, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      name: contactItem.fullName,\n      email: contactItem.emailAddress,\n      phone: contactItem.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","axios","Card","ContactList","contacts","setContacts","uniqueLetters","setUniqueLetters","searchText","setSearchText","currentIndex","setCurrentIndex","loading","SetLoading","getUniqueLetter","filter","reduce","result","fullName","includes","charAt","fetchData","get","then","response","data","console","log","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","contactItem","map","letter","i","emailAddress","phoneNumber"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [loading, SetLoading] = useState(false);\n\n  const getUniqueLetter = () => {\n    const filter = contacts.reduce(\n      (result, { fullName }) => [\n        ...result,\n        ...(!result.includes(fullName.charAt(0)) ? [fullName.charAt(0)] : []),\n      ],\n      []\n    );\n    return filter;\n  };\n  const fetchData = () => {\n    const result = axios.get(\"./contacts.json\").then(function (response) {\n      setContacts(response.data.data);\n      setUniqueLetters(getUniqueLetter());\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log(uniqueLetters);\n  });\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n  return (\n    <div className=\"contact-list\">\n      <h1 className=\"title title_underline\">Contacts</h1>\n      <ul>\n        {uniqueLetters.map((letter, i) => {\n          return (\n            <li key={i} onClick={handleFilter}>\n              {letter}\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"list-wrapper\">\n        {contacts.map((contactItem, i) => {\n          return (\n            <Card\n              key={i}\n              name={contactItem.fullName}\n              email={contactItem.emailAddress}\n              phone={contactItem.phoneNumber}\n            ></Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}