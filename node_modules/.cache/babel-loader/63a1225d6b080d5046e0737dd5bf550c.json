{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/EditContact.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Title from \"../components/Title\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst EditContact = props => {\n  const {\n    contacts,\n    editContact\n  } = useContext(GlobalContext);\n  const [selectedContact, setSelectedContact] = useState({\n    id: \"\",\n    fullName: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\"\n  });\n  const history = useHistory();\n  const currentContactId = props.match.params.id;\n  useEffect(() => {\n    const contactId = currentContactId;\n    if (!contacts) return;\n    let contactList = contacts;\n    const selectedContact = contactList.find(contact => contact.id === contactId);\n    setSelectedContact(selectedContact);\n  }, [currentContactId, contacts]);\n\n  const onChange = e => {\n    setSelectedContact({ ...selectedContact,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    console.log(selectedContact);\n    e.preventDefault();\n    editContact(selectedContact);\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n    content: \"Edit Contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: selectedContact.fullName,\n    onChange: onChange,\n    name: \"fullName\",\n    placeholder: \"Enter contact\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    value: selectedContact.emailAddress,\n    onChange: onChange,\n    name: \"emailAddress\",\n    placeholder: \"Enter email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"tel\",\n    value: selectedContact.phoneNumber,\n    onChange: onChange,\n    name: \"phoneNumber\",\n    placeholder: \"Enter phone\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Edit Contact\")));\n};\n\nexport default EditContact;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/EditContact.js"],"names":["React","useEffect","useState","useContext","Title","Form","FormGroup","Label","Input","Button","Link","useHistory","GlobalContext","EditContact","props","contacts","editContact","selectedContact","setSelectedContact","id","fullName","emailAddress","phoneNumber","history","currentContactId","match","params","contactId","contactList","find","contact","onChange","e","target","name","value","onSubmit","console","log","preventDefault","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport Title from \"../components/Title\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst EditContact = (props) => {\n  const { contacts, editContact } = useContext(GlobalContext);\n  const [selectedContact, setSelectedContact] = useState({\n    id: \"\",\n    fullName: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\",\n  });\n  const history = useHistory();\n  const currentContactId = props.match.params.id;\n\n  useEffect(() => {\n    const contactId = currentContactId;\n    if (!contacts) return;\n    let contactList = contacts;\n    const selectedContact = contactList.find(\n      (contact) => contact.id === contactId\n    );\n    setSelectedContact(selectedContact);\n  }, [currentContactId, contacts]);\n\n  const onChange = (e) => {\n    setSelectedContact({ ...selectedContact, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    console.log(selectedContact);\n    e.preventDefault();\n    editContact(selectedContact);\n    history.push(\"/\");\n  };\n  return (\n    <>\n      <Title content=\"Edit Contact\" />\n      <Form onSubmit={onSubmit}>\n        <FormGroup>\n          <Label>Name</Label>\n          <Input\n            type=\"text\"\n            value={selectedContact.fullName}\n            onChange={onChange}\n            name=\"fullName\"\n            placeholder=\"Enter contact\"\n            required\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Label>Email Address</Label>\n          <Input\n            type=\"email\"\n            value={selectedContact.emailAddress}\n            onChange={onChange}\n            name=\"emailAddress\"\n            placeholder=\"Enter email\"\n            required\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Label>Phone Number</Label>\n          <Input\n            type=\"tel\"\n            value={selectedContact.phoneNumber}\n            onChange={onChange}\n            name=\"phoneNumber\"\n            placeholder=\"Enter phone\"\n            required\n          ></Input>\n        </FormGroup>\n        <Button type=\"submit\">Edit Contact</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default EditContact;\n"]},"metadata":{},"sourceType":"module"}