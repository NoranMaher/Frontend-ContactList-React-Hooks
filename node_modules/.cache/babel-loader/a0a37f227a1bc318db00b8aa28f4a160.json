{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/index.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const ContactsContext = createContext();\nexport const ContactsContextProvider = props => {\n  const [contacts, setContacts] = useState();\n  const [search, setSearch] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n      const searchUrl = `${url}&q=${search}`;\n      const searchedRecipeData = await fetch(searchUrl);\n      const {\n        recipes\n      } = await searchedRecipeData.json();\n      setRecipes(recipes);\n      setLoading(false);\n      setShowHomeButton(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(\"./contacts.json\").then(response => setContacts(response.data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(ContactsContext.Provider, {\n    value: {\n      contacts,\n      handleSearchChange,\n      handleSubmit\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport const ContactsConsumer = ContactsContext.Consumer;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/index.js"],"names":["React","createContext","useEffect","useState","axios","ContactsContext","ContactsContextProvider","props","contacts","setContacts","search","setSearch","handleSubmit","e","preventDefault","setLoading","searchUrl","url","searchedRecipeData","fetch","recipes","json","setRecipes","setShowHomeButton","console","log","handleSearchChange","target","value","get","then","response","data","catch","error","children","ContactsConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGJ,aAAa,EAArC;AAEP,OAAO,MAAMK,uBAAuB,GAAIC,KAAD,IAAW;AAChD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACFC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMC,SAAS,GAAI,GAAEC,GAAI,MAAKP,MAAO,EAArC;AACA,YAAMQ,kBAAkB,GAAG,MAAMC,KAAK,CAACH,SAAD,CAAtC;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAc,MAAMF,kBAAkB,CAACG,IAAnB,EAA1B;AACAC,MAAAA,UAAU,CAACF,OAAD,CAAV;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,KARD,CAQE,OAAOV,CAAP,EAAU;AACVW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACD;AACF,GAbD;;AAcA,QAAMa,kBAAkB,GAAIb,CAAD,IAAO;AAChCF,IAAAA,SAAS,CAACE,CAAC,CAACc,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAGA1B,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFyB,GADH,CACO,iBADP,EAEGC,IAFH,CAESC,QAAD,IAActB,WAAW,CAACsB,QAAQ,CAACC,IAAV,CAFjC,EAGGC,KAHH,CAGUC,KAAD,IAAWV,OAAO,CAACC,GAAR,CAAYS,KAAZ,CAHpB;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AAAE1B,MAAAA,QAAF;AAAYkB,MAAAA,kBAAZ;AAAgCd,MAAAA;AAAhC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGL,KAAK,CAAC4B,QAHT,CADF;AAOD,CAnCM;AAqCP,OAAO,MAAMC,gBAAgB,GAAG/B,eAAe,CAACgC,QAAzC","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const ContactsContext = createContext();\n\nexport const ContactsContextProvider = (props) => {\n  const [contacts, setContacts] = useState();\n  const [search, setSearch] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      const searchUrl = `${url}&q=${search}`;\n      const searchedRecipeData = await fetch(searchUrl);\n      const { recipes } = await searchedRecipeData.json();\n      setRecipes(recipes);\n      setLoading(false);\n      setShowHomeButton(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n  };\n  useEffect(() => {\n    axios\n      .get(\"./contacts.json\")\n      .then((response) => setContacts(response.data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <ContactsContext.Provider\n      value={{ contacts, handleSearchChange, handleSubmit }}\n    >\n      {props.children}\n    </ContactsContext.Provider>\n  );\n};\n\nexport const ContactsConsumer = ContactsContext.Consumer;\n"]},"metadata":{},"sourceType":"module"}