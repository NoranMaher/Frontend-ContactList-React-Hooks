{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { ContactsContext } from \"../context/index\";\n\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const {\n    contacts\n  } = useContext(ContactsContext);\n  useEffect(() => {\n    console.log(contacts);\n    setFetchedContacts(contacts.data);\n  }, []);\n  useEffect(() => {\n    setUniqueLetters(Array.from(new Set(contacts.map(name => name.fullName.charAt(0)))));\n  }, [contacts]);\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.data.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setFetchedContacts(selectedContacts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, uniqueLetters ? uniqueLetters.map((letter, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    onClick: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, letter)) : \"Loading\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, fetchedContacts ? fetchedContacts.map((contactItem, i) => /*#__PURE__*/React.createElement(Card, {\n    key: i,\n    userId: contactItem.id,\n    name: contactItem.fullName,\n    email: contactItem.emailAddress,\n    phone: contactItem.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })) : \"Loading\"));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","useContext","axios","Card","ContactsContext","ContactList","uniqueLetters","setUniqueLetters","fetchedContacts","setFetchedContacts","searchText","setSearchText","loading","SetLoading","contacts","console","log","data","Array","from","Set","map","name","fullName","charAt","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","filter","contactItem","letter","i","id","emailAddress","phoneNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAAeb,UAAU,CAACG,eAAD,CAA/B;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,IAAAA,kBAAkB,CAACK,QAAQ,CAACG,IAAV,CAAlB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,gBAAgB,CACdW,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQN,QAAQ,CAACO,GAAT,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqB,CAArB,CAAvB,CAAR,CAAX,CADc,CAAhB;AAGD,GAJQ,EAIN,CAACV,QAAD,CAJM,CAAT;;AAMA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAoBC,SAA3C;AACA,QAAIC,gBAAgB,GAAGhB,QAAQ,CAACG,IAAT,CAAcc,MAAd,CAAqB,UAAUC,WAAV,EAAuB;AACjE,aAAOA,WAAW,CAACT,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,KAAkCG,cAAzC;AACD,KAFsB,CAAvB;AAGAlB,IAAAA,kBAAkB,CAACqB,gBAAD,CAAlB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,aAAa,GACVA,aAAa,CAACe,GAAd,CAAkB,CAACY,MAAD,EAASC,CAAT,kBAChB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,OAAO,EAAET,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,MADH,CADF,CADU,GAMV,SAPN,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,eAAe,GACZA,eAAe,CAACa,GAAhB,CAAoB,CAACW,WAAD,EAAcE,CAAd,kBAClB,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,MAAM,EAAEF,WAAW,CAACG,EAFtB;AAGE,IAAA,IAAI,EAAEH,WAAW,CAACT,QAHpB;AAIE,IAAA,KAAK,EAAES,WAAW,CAACI,YAJrB;AAKE,IAAA,KAAK,EAAEJ,WAAW,CAACK,WALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,GAUZ,SAXN,CAVF,CADF;AA0BD,CApDD;;AAsDA,eAAehC,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { ContactsContext } from \"../context/index\";\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n\n  const { contacts } = useContext(ContactsContext);\n  useEffect(() => {\n    console.log(contacts);\n    setFetchedContacts(contacts.data);\n  }, []);\n\n  useEffect(() => {\n    setUniqueLetters(\n      Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n    );\n  }, [contacts]);\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.data.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setFetchedContacts(selectedContacts);\n  };\n\n  return (\n    <div className=\"contact-list\">\n      <ul>\n        {uniqueLetters\n          ? uniqueLetters.map((letter, i) => (\n              <li key={i} onClick={handleFilter}>\n                {letter}\n              </li>\n            ))\n          : \"Loading\"}\n      </ul>\n      <div className=\"list-wrapper\">\n        {fetchedContacts\n          ? fetchedContacts.map((contactItem, i) => (\n              <Card\n                key={i}\n                userId={contactItem.id}\n                name={contactItem.fullName}\n                email={contactItem.emailAddress}\n                phone={contactItem.phoneNumber}\n              ></Card>\n            ))\n          : \"Loading\"}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}