{"ast":null,"code":"export default ((state, action) => {\n  switch (action.type) {\n    case \"GET_CONTACTS\":\n      return { ...state,\n        contacts: action.payload\n      };\n\n    case \"REMOVE_CONTACT\":\n      return { ...state,\n        contacts: state.contacts.filter(contact => {\n          return contact.id !== action.payload;\n        })\n      };\n\n    case \"ADD_CONTACT\":\n      return { ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case \"EDIT_CONTACT\":\n      const pyaloadContact = action.payload;\n      const updateContacts = state.contacts.map(contact => {\n        if (contact.id === pyaloadContact.id) {\n          return pyaloadContact;\n        }\n\n        return contact;\n      });\n      return { ...state,\n        contacts: updateContacts\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/AppReducer.js"],"names":["state","action","type","contacts","payload","filter","contact","id","pyaloadContact","updateContacts","map"],"mappings":"AAAA,gBAAe,CAACA,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAFZ,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAuBC,OAAD,IAAa;AAC3C,iBAAOA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAA7B;AACD,SAFS;AAFL,OAAP;;AAMF,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,QAAQ,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,QAA1B;AAFL,OAAP;;AAIF,SAAK,cAAL;AACE,YAAMK,cAAc,GAAGP,MAAM,CAACG,OAA9B;AACA,YAAMK,cAAc,GAAGT,KAAK,CAACG,QAAN,CAAeO,GAAf,CAAoBJ,OAAD,IAAa;AACrD,YAAIA,OAAO,CAACC,EAAR,KAAeC,cAAc,CAACD,EAAlC,EAAsC;AACpC,iBAAOC,cAAP;AACD;;AACD,eAAOF,OAAP;AACD,OALsB,CAAvB;AAMA,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,QAAQ,EAAEM;AAFL,OAAP;;AAKF;AACE,aAAOT,KAAP;AAhCJ;AAkCD,CAnCD","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"GET_CONTACTS\":\n      return {\n        ...state,\n        contacts: action.payload,\n      };\n    case \"REMOVE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter((contact) => {\n          return contact.id !== action.payload;\n        }),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case \"EDIT_CONTACT\":\n      const pyaloadContact = action.payload;\n      const updateContacts = state.contacts.map((contact) => {\n        if (contact.id === pyaloadContact.id) {\n          return pyaloadContact;\n        }\n        return contact;\n      });\n      return {\n        ...state,\n        contacts: updateContacts,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}