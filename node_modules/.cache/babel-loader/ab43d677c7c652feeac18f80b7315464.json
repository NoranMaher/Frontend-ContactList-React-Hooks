{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactDetails.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Title from \"../components/Title\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ContactsContext } from \"../context/index\";\n\nconst ContactDetails = props => {\n  const {\n    contacts\n  } = useContext(ContactsContext);\n  const [selectedContact, setSelectedContact] = useState({\n    id: \"\",\n    fullName: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\"\n  });\n  const history = useHistory();\n  const currentContactId = props.match.params.id;\n  useEffect(() => {\n    if (!contacts) return;\n    let contactList = contacts.data;\n    const contactId = currentContactId;\n    const selectedContact = contactList.find(contact => contact.id === contactId);\n    setSelectedContact(selectedContact);\n  }, [currentContactId, contacts]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n    content: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, selectedContact.fullName)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"E-mail:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, selectedContact.emailAddress)), /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Phone:\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, selectedContact.phoneNumber))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/edit/${params.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Edit\")));\n};\n\nexport default ContactDetails;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactDetails.js"],"names":["React","useContext","useState","useEffect","useParams","Title","ListGroup","ListGroupItem","Button","Link","useHistory","ContactsContext","ContactDetails","props","contacts","selectedContact","setSelectedContact","id","fullName","emailAddress","phoneNumber","history","currentContactId","match","params","contactList","data","contactId","find","contact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,MAAnC,QAAiD,YAAjD;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAeb,UAAU,CAACU,eAAD,CAA/B;AACA,QAAM,CAACI,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC;AACrDe,IAAAA,EAAE,EAAE,EADiD;AAErDC,IAAAA,QAAQ,EAAE,EAF2C;AAGrDC,IAAAA,YAAY,EAAE,EAHuC;AAIrDC,IAAAA,WAAW,EAAE;AAJwC,GAAD,CAAtD;AAMA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAMY,gBAAgB,GAAGT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBP,EAA5C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,QAAL,EAAe;AACf,QAAIW,WAAW,GAAGX,QAAQ,CAACY,IAA3B;AACA,UAAMC,SAAS,GAAGL,gBAAlB;AACA,UAAMP,eAAe,GAAGU,WAAW,CAACG,IAAZ,CACrBC,OAAD,IAAaA,OAAO,CAACZ,EAAR,KAAeU,SADN,CAAxB;AAGAX,IAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACD,GARQ,EAQN,CAACO,gBAAD,EAAmBR,QAAnB,CARM,CAAT;AASA,sBACE,uDACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,eAAe,CAACG,QAAvB,CAFF,CADF,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,eAAe,CAACI,YAAvB,CAFF,CALF,eASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,eAAe,CAACK,WAAvB,CAFF,CATF,CAFF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,SAAQI,MAAM,CAACP,EAAG,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CAhBF,CADF;AA0BD,CA9CD;;AAgDA,eAAeL,cAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Title from \"../components/Title\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ContactsContext } from \"../context/index\";\n\nconst ContactDetails = (props) => {\n  const { contacts } = useContext(ContactsContext);\n  const [selectedContact, setSelectedContact] = useState({\n    id: \"\",\n    fullName: \"\",\n    emailAddress: \"\",\n    phoneNumber: \"\",\n  });\n  const history = useHistory();\n  const currentContactId = props.match.params.id;\n\n  useEffect(() => {\n    if (!contacts) return;\n    let contactList = contacts.data;\n    const contactId = currentContactId;\n    const selectedContact = contactList.find(\n      (contact) => contact.id === contactId\n    );\n    setSelectedContact(selectedContact);\n  }, [currentContactId, contacts]);\n  return (\n    <>\n      <Title content=\"Profile\" />\n      <ListGroup>\n        <ListGroupItem>\n          <span>Name:</span>\n          <span>{selectedContact.fullName}</span>\n        </ListGroupItem>\n        <ListGroupItem>\n          <span>E-mail:</span>\n          <span>{selectedContact.emailAddress}</span>\n        </ListGroupItem>\n        <ListGroupItem>\n          <span>Phone:</span>\n          <span>{selectedContact.phoneNumber}</span>\n        </ListGroupItem>\n      </ListGroup>\n      <div>\n        {/* <Button outline onClick={() => removeContact(params.id)} color=\"danger\">\n          Delete\n        </Button> */}\n\n        <Link to={`/edit/${params.id}`}>Edit</Link>\n      </div>\n    </>\n  );\n};\n\nexport default ContactDetails;\n"]},"metadata":{},"sourceType":"module"}