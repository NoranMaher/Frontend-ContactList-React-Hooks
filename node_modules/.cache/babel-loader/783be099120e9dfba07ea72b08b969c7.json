{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { ContactsContext } from \"../context/index\";\n\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const appContext = useContext(ContactsContext);\n  const {\n    contacts\n  } = appContext; // const fetchData = () => {\n  //   axios.get(\"./contacts.json\").then(function (response) {\n  //     getContacts(response.data.data);\n  //   });\n  // };\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n\n  useEffect(() => {\n    setFetchedContacts(contacts);\n  }, [contacts]);\n  useEffect(() => {\n    setUniqueLetters(Array.from(new Set(contacts.map(name => name.fullName.charAt(0)))));\n  }, [contacts]);\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setFetchedContacts(selectedContacts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, uniqueLetters.map((letter, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      onClick: handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, letter);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, fetchedContacts.map((contactItem, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      userId: contactItem.id,\n      name: contactItem.fullName,\n      email: contactItem.emailAddress,\n      phone: contactItem.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","useContext","axios","Card","ContactsContext","ContactList","uniqueLetters","setUniqueLetters","fetchedContacts","setFetchedContacts","searchText","setSearchText","loading","SetLoading","appContext","contacts","Array","from","Set","map","name","fullName","charAt","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","filter","contactItem","letter","i","id","emailAddress","phoneNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMc,UAAU,GAAGb,UAAU,CAACG,eAAD,CAA7B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeD,UAArB,CAPwB,CASxB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,kBAAkB,CAACM,QAAD,CAAlB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,gBAAgB,CACdS,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQH,QAAQ,CAACI,GAAT,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcC,MAAd,CAAqB,CAArB,CAAvB,CAAR,CAAX,CADc,CAAhB;AAGD,GAJQ,EAIN,CAACP,QAAD,CAJM,CAAT;;AAMA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAoBC,SAA3C;AACA,QAAIC,gBAAgB,GAAGb,QAAQ,CAACc,MAAT,CAAgB,UAAUC,WAAV,EAAuB;AAC5D,aAAOA,WAAW,CAACT,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,KAAkCG,cAAzC;AACD,KAFsB,CAAvB;AAGAhB,IAAAA,kBAAkB,CAACmB,gBAAD,CAAlB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,aAAa,CAACa,GAAd,CAAkB,CAACY,MAAD,EAASC,CAAT,KAAe;AAChC,wBACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,MAAA,OAAO,EAAET,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,MADH,CADF;AAKD,GANA,CADH,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,eAAe,CAACW,GAAhB,CAAoB,CAACW,WAAD,EAAcE,CAAd,KAAoB;AACvC,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,MAAM,EAAEF,WAAW,CAACG,EAFtB;AAGE,MAAA,IAAI,EAAEH,WAAW,CAACT,QAHpB;AAIE,MAAA,KAAK,EAAES,WAAW,CAACI,YAJrB;AAKE,MAAA,KAAK,EAAEJ,WAAW,CAACK,WALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CADH,CAVF,CADF;AA0BD,CA/DD;;AAiEA,eAAe9B,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { ContactsContext } from \"../context/index\";\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n\n  const appContext = useContext(ContactsContext);\n  const { contacts } = appContext;\n\n  // const fetchData = () => {\n  //   axios.get(\"./contacts.json\").then(function (response) {\n  //     getContacts(response.data.data);\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n\n  useEffect(() => {\n    setFetchedContacts(contacts);\n  }, [contacts]);\n\n  useEffect(() => {\n    setUniqueLetters(\n      Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n    );\n  }, [contacts]);\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setFetchedContacts(selectedContacts);\n  };\n\n  return (\n    <div className=\"contact-list\">\n      <ul>\n        {uniqueLetters.map((letter, i) => {\n          return (\n            <li key={i} onClick={handleFilter}>\n              {letter}\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"list-wrapper\">\n        {fetchedContacts.map((contactItem, i) => {\n          return (\n            <Card\n              key={i}\n              userId={contactItem.id}\n              name={contactItem.fullName}\n              email={contactItem.emailAddress}\n              phone={contactItem.phoneNumber}\n            ></Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}