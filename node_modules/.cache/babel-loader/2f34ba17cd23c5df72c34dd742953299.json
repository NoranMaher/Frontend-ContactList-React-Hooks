{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\n\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [loading, SetLoading] = useState(false);\n\n  const fetchData = () => {\n    const result = axios.get(\"./contacts.json\").then(function (response) {\n      setContacts(response.data.data);\n    });\n  };\n\n  const getUniqueLetter = array => {\n    const filter = array.reduce((result, {\n      fullName\n    }) => [...result, ...(!result.includes(fullName.charAt(0)) ? [fullName.charAt(0)] : [])], []);\n    console.log(filter);\n    return filter;\n  };\n\n  useEffect(() => {\n    fetchData();\n    isLoading(fa);\n  }, []);\n  useEffect(() => {\n    console.log(contacts);\n    getUniqueLetter(contacts);\n  }, [fetchData]);\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title title_underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Contacts\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, uniqueLetters.map((letter, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      onClick: handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, letter);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, contacts.map((contactItem, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      name: contactItem.fullName,\n      email: contactItem.emailAddress,\n      phone: contactItem.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","axios","Card","ContactList","contacts","setContacts","uniqueLetters","setUniqueLetters","searchText","setSearchText","currentIndex","setCurrentIndex","loading","SetLoading","fetchData","result","get","then","response","data","getUniqueLetter","array","filter","reduce","fullName","includes","charAt","console","log","isLoading","fa","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","contactItem","map","letter","i","emailAddress","phoneNumber"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [loading, SetLoading] = useState(false);\n\n  const fetchData = () => {\n    const result = axios.get(\"./contacts.json\").then(function (response) {\n      setContacts(response.data.data);\n    });\n  };\n\n  const getUniqueLetter = (array) => {\n    const filter = array.reduce(\n      (result, { fullName }) => [\n        ...result,\n        ...(!result.includes(fullName.charAt(0)) ? [fullName.charAt(0)] : []),\n      ],\n      []\n    );\n    console.log(filter);\n    return filter;\n  };\n\n  useEffect(() => {\n    fetchData();\n    isLoading(fa);\n  }, []);\n\n  useEffect(() => {\n    console.log(contacts);\n    getUniqueLetter(contacts);\n  }, [fetchData]);\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n  return (\n    <div className=\"contact-list\">\n      <h1 className=\"title title_underline\">Contacts</h1>\n      <ul>\n        {uniqueLetters.map((letter, i) => {\n          return (\n            <li key={i} onClick={handleFilter}>\n              {letter}\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"list-wrapper\">\n        {contacts.map((contactItem, i) => {\n          return (\n            <Card\n              key={i}\n              name={contactItem.fullName}\n              email={contactItem.emailAddress}\n              phone={contactItem.phoneNumber}\n            ></Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}