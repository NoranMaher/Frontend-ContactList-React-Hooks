{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { ContactsContext } from \"../context/index\";\n\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  useEffect(() => {\n    const {\n      contacts\n    } = useContext(ContactsContext);\n    setFetchedContacts(contacts);\n  }, [contacts]); // useEffect(() => {\n  //   setUniqueLetters(\n  //     Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n  //   );\n  // }, [contacts]);\n  // const handleFilter = (event) => {\n  //   const selectedLetter = event.currentTarget.innerText;\n  //   var selectedContacts = contacts.data.filter(function (contactItem) {\n  //     return contactItem.fullName.charAt(0) == selectedLetter;\n  //   });\n  //   setFetchedContacts(selectedContacts);\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, contacts ? uniqueLetters.map((letter, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }\n  }, letter)) : \"Loading\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, fetchedContacts ? fetchedContacts.data.map((contactItem, i) => /*#__PURE__*/React.createElement(Card, {\n    key: i,\n    userId: contactItem.id,\n    name: contactItem.fullName,\n    email: contactItem.emailAddress,\n    phone: contactItem.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  })) : \"Loading\"));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","useContext","axios","Card","ContactsContext","ContactList","uniqueLetters","setUniqueLetters","fetchedContacts","setFetchedContacts","searchText","setSearchText","loading","SetLoading","contacts","map","letter","i","data","contactItem","id","fullName","emailAddress","phoneNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEe,MAAAA;AAAF,QAAeb,UAAU,CAACG,eAAD,CAA/B;AAEAK,IAAAA,kBAAkB,CAACK,QAAD,CAAlB;AACD,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT,CANwB,CAWxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,GACLR,aAAa,CAACS,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,kBAAe;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,MAAb,CAAjC,CADK,GAEL,SAHN,CADF,eAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,eAAe,GACZA,eAAe,CAACU,IAAhB,CAAqBH,GAArB,CAAyB,CAACI,WAAD,EAAcF,CAAd,kBACvB,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,MAAM,EAAEE,WAAW,CAACC,EAFtB;AAGE,IAAA,IAAI,EAAED,WAAW,CAACE,QAHpB;AAIE,IAAA,KAAK,EAAEF,WAAW,CAACG,YAJrB;AAKE,IAAA,KAAK,EAAEH,WAAW,CAACI,WALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,GAUZ,SAXN,CANF,CADF;AAsBD,CA9CD;;AAgDA,eAAelB,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { ContactsContext } from \"../context/index\";\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [fetchedContacts, setFetchedContacts] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n\n  useEffect(() => {\n    const { contacts } = useContext(ContactsContext);\n\n    setFetchedContacts(contacts);\n  }, [contacts]);\n  // useEffect(() => {\n  //   setUniqueLetters(\n  //     Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n  //   );\n  // }, [contacts]);\n  // const handleFilter = (event) => {\n  //   const selectedLetter = event.currentTarget.innerText;\n  //   var selectedContacts = contacts.data.filter(function (contactItem) {\n  //     return contactItem.fullName.charAt(0) == selectedLetter;\n  //   });\n  //   setFetchedContacts(selectedContacts);\n  // };\n\n  return (\n    <div className=\"contact-list\">\n      <ul>\n        {contacts\n          ? uniqueLetters.map((letter, i) => <li key={i}>{letter}</li>)\n          : \"Loading\"}\n      </ul>\n      <div className=\"list-wrapper\">\n        {fetchedContacts\n          ? fetchedContacts.data.map((contactItem, i) => (\n              <Card\n                key={i}\n                userId={contactItem.id}\n                name={contactItem.fullName}\n                email={contactItem.emailAddress}\n                phone={contactItem.phoneNumber}\n              ></Card>\n            ))\n          : \"Loading\"}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}