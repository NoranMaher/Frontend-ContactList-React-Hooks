{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\n\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    function fetchData() {\n      axios.get(\"./contacts.json\").then(response => {\n        setLoading(false);\n        setContacts(response.data.data); // const filter = response.data.data.reduce(\n        //   (result, { fullName }) => [\n        //     ...result,\n        //     ...(!result.includes(fullName.charAt(0))\n        //       ? [fullName.charAt(0)]\n        //       : []),\n        //   ],\n        //   []\n        // );\n        // setUniqueLetters(filter);\n      });\n    }\n\n    fetchData();\n  });\n  const list = contacts.map((item, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      name: contactItem.fullName,\n      email: contactItem.emailAddress,\n      phone: contactItem.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    });\n  });\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title title_underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Contacts\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, uniqueLetters.map((letter, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      onClick: handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, letter);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, list));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","axios","Card","ContactList","contacts","setContacts","uniqueLetters","setUniqueLetters","searchText","setSearchText","currentIndex","setCurrentIndex","loading","setLoading","fetchData","get","then","response","data","list","map","item","i","contactItem","fullName","emailAddress","phoneNumber","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","filter","charAt","letter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAC,CAAF,CAAhD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASe,SAAT,GAAqB;AACnBb,MAAAA,KAAK,CAACc,GAAN,CAAU,iBAAV,EAA6BC,IAA7B,CAAmCC,QAAD,IAAc;AAC9CJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAR,QAAAA,WAAW,CAACY,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAX,CAF8C,CAI9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,OAfD;AAgBD;;AACDJ,IAAAA,SAAS;AACV,GApBQ,CAAT;AAsBA,QAAMK,IAAI,GAAGf,QAAQ,CAACgB,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrC,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,IAAI,EAAEC,WAAW,CAACC,QAFpB;AAGE,MAAA,KAAK,EAAED,WAAW,CAACE,YAHrB;AAIE,MAAA,KAAK,EAAEF,WAAW,CAACG,WAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATY,CAAb;;AAWA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAoBC,SAA3C;AACA,QAAIC,gBAAgB,GAAG5B,QAAQ,CAAC6B,MAAT,CAAgB,UAAUV,WAAV,EAAuB;AAC5D,aAAOA,WAAW,CAACC,QAAZ,CAAqBU,MAArB,CAA4B,CAA5B,KAAkCL,cAAzC;AACD,KAFsB,CAAvB;AAGAxB,IAAAA,WAAW,CAAC2B,gBAAD,CAAX;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,aAAa,CAACc,GAAd,CAAkB,CAACe,MAAD,EAASb,CAAT,KAAe;AAChC,wBACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,MAAA,OAAO,EAAEK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,MADH,CADF;AAKD,GANA,CADH,CAFF,eAWE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BhB,IAA/B,CAXF,CADF;AAeD,CA9DD;;AAgEA,eAAehB,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    function fetchData() {\n      axios.get(\"./contacts.json\").then((response) => {\n        setLoading(false);\n        setContacts(response.data.data);\n\n        // const filter = response.data.data.reduce(\n        //   (result, { fullName }) => [\n        //     ...result,\n        //     ...(!result.includes(fullName.charAt(0))\n        //       ? [fullName.charAt(0)]\n        //       : []),\n        //   ],\n        //   []\n        // );\n\n        // setUniqueLetters(filter);\n      });\n    }\n    fetchData();\n  });\n\n  const list = contacts.map((item, i) => {\n    return (\n      <Card\n        key={i}\n        name={contactItem.fullName}\n        email={contactItem.emailAddress}\n        phone={contactItem.phoneNumber}\n      ></Card>\n    );\n  });\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n  return (\n    <div className=\"contact-list\">\n      <h1 className=\"title title_underline\">Contacts</h1>\n      <ul>\n        {uniqueLetters.map((letter, i) => {\n          return (\n            <li key={i} onClick={handleFilter}>\n              {letter}\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"list-wrapper\">{list}</div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}