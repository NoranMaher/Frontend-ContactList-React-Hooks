{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/index.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const ContactsContext = createContext({\n  contacts: [],\n  setSearch: () => {}\n});\nexport const ContactsContextProvider = props => {\n  const [contacts, setContacts] = useState();\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"./contacts.json\").then(response => setContacts(response.data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(ContactsContext.Provider, {\n    value: {\n      contacts,\n      setSearch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/index.js"],"names":["React","createContext","useEffect","useState","axios","ContactsContext","contacts","setSearch","ContactsContextProvider","props","setContacts","search","get","then","response","data","catch","error","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGJ,aAAa,CAAC;AAC3CK,EAAAA,QAAQ,EAAE,EADiC;AAE3CC,EAAAA,SAAS,EAAE,MAAM,CAAE;AAFwB,CAAD,CAArC;AAKP,OAAO,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAChD,QAAM,CAACH,QAAD,EAAWI,WAAX,IAA0BP,QAAQ,EAAxC;AACA,QAAM,CAACQ,MAAD,EAASJ,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFQ,GADH,CACO,iBADP,EAEGC,IAFH,CAESC,QAAD,IAAcJ,WAAW,CAACI,QAAQ,CAACC,IAAV,CAFjC,EAGGC,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEX,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACW,QADT,CADF;AAKD,CAhBM","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const ContactsContext = createContext({\n  contacts: [],\n  setSearch: () => {},\n});\n\nexport const ContactsContextProvider = (props) => {\n  const [contacts, setContacts] = useState();\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"./contacts.json\")\n      .then((response) => setContacts(response.data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <ContactsContext.Provider value={{ contacts, setSearch }}>\n      {props.children}\n    </ContactsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}