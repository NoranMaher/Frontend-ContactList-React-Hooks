{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\n\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [loading, SetLoading] = useState(false);\n\n  const fetchData = () => {\n    const result = axios.get(\"./contacts.json\").then(function (response) {\n      setContacts(response.data.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log(contacts);\n  }, [contacts]); // useEffect(() => {\n  //   console.log(contacts);\n  //   const filter = contacts.reduce(\n  //     (result, { fullName }) => [\n  //       ...result,\n  //       ...(!result.includes(fullName.charAt(0)) ? [fullName.charAt(0)] : []),\n  //     ],\n  //     []\n  //   );\n  //   console.log(filter);\n  //   setUniqueLetters(filter);\n  // }, [fetchData]);\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title title_underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Contacts\"), uniqueLetters.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, uniqueLetters.map((letter, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      onClick: handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, letter);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, contacts.map((contactItem, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      name: contactItem.fullName,\n      email: contactItem.emailAddress,\n      phone: contactItem.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","axios","Card","ContactList","contacts","setContacts","uniqueLetters","setUniqueLetters","searchText","setSearchText","currentIndex","setCurrentIndex","loading","SetLoading","fetchData","result","get","then","response","data","console","log","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","filter","contactItem","fullName","charAt","length","map","letter","i","emailAddress","phoneNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAC,CAAF,CAAhD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMc,SAAS,GAAG,MAAM;AACtB,UAAMC,MAAM,GAAGd,KAAK,CAACe,GAAN,CAAU,iBAAV,EAA6BC,IAA7B,CAAkC,UAAUC,QAAV,EAAoB;AACnEb,MAAAA,WAAW,CAACa,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAX;AACD,KAFc,CAAf;AAGD,GAJD;;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAjBwB,CAoBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMkB,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAoBC,SAA3C;AACA,QAAIC,gBAAgB,GAAGvB,QAAQ,CAACwB,MAAT,CAAgB,UAAUC,WAAV,EAAuB;AAC5D,aAAOA,WAAW,CAACC,QAAZ,CAAqBC,MAArB,CAA4B,CAA5B,KAAkCP,cAAzC;AACD,KAFsB,CAAvB;AAGAnB,IAAAA,WAAW,CAACsB,gBAAD,CAAX;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGrB,aAAa,CAAC0B,MAAd,GAAuB,CAAvB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,aAAa,CAAC2B,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,KAAe;AAChC,wBACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,MAAA,OAAO,EAAEb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,MADH,CADF;AAKD,GANA,CADH,CAHJ,eAaE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG9B,QAAQ,CAAC6B,GAAT,CAAa,CAACJ,WAAD,EAAcM,CAAd,KAAoB;AAChC,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,IAAI,EAAEN,WAAW,CAACC,QAFpB;AAGE,MAAA,KAAK,EAAED,WAAW,CAACO,YAHrB;AAIE,MAAA,KAAK,EAAEP,WAAW,CAACQ,WAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATA,CADH,CAbF,CADF;AA4BD,CApED;;AAsEA,eAAelC,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nconst ContactList = () => {\n  const [contacts, setContacts] = useState([]);\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [loading, SetLoading] = useState(false);\n\n  const fetchData = () => {\n    const result = axios.get(\"./contacts.json\").then(function (response) {\n      setContacts(response.data.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    console.log(contacts);\n  }, [contacts]);\n  // useEffect(() => {\n  //   console.log(contacts);\n  //   const filter = contacts.reduce(\n  //     (result, { fullName }) => [\n  //       ...result,\n  //       ...(!result.includes(fullName.charAt(0)) ? [fullName.charAt(0)] : []),\n  //     ],\n  //     []\n  //   );\n  //   console.log(filter);\n  //   setUniqueLetters(filter);\n  // }, [fetchData]);\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n  return (\n    <div className=\"contact-list\">\n      <h1 className=\"title title_underline\">Contacts</h1>\n      {uniqueLetters.length > 0 && (\n        <ul>\n          {uniqueLetters.map((letter, i) => {\n            return (\n              <li key={i} onClick={handleFilter}>\n                {letter}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      <div className=\"list-wrapper\">\n        {contacts.map((contactItem, i) => {\n          return (\n            <Card\n              key={i}\n              name={contactItem.fullName}\n              email={contactItem.emailAddress}\n              phone={contactItem.phoneNumber}\n            ></Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}