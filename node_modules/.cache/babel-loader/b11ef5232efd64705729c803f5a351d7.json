{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nconst initialState = {\n  contacts: [],\n  setContacts: contacts => null\n};\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, GlobalContext.contacts);\n  console.log(\"GlobalContext.contacts ==>\", GlobalContext); // Actions\n\n  const setContacts = contacts => {\n    dispatch({\n      type: \"SET_CONTACTS\",\n      payload: contacts\n    });\n  };\n\n  const removeContact = id => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id\n    });\n  };\n\n  const addContact = contact => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact\n    });\n  };\n\n  const editContact = contact => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"/contacts.json\").then(response => {\n      const {\n        data\n      } = response;\n      data.forEach(contact => {\n        dispatch({\n          type: \"ADD_CONTACT\",\n          payload: contact\n        });\n      });\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      removeContact,\n      addContact,\n      editContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","initialState","contacts","setContacts","GlobalContext","GlobalProvider","children","state","dispatch","console","log","type","payload","removeContact","id","addContact","contact","editContact","get","then","response","data","forEach","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAGD,QAAD,IAAc;AAFR,CAArB;AAKA,OAAO,MAAME,aAAa,GAAGT,aAAa,CAACM,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACG,UAAD,EAAaK,aAAa,CAACF,QAA3B,CAApC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CN,aAA1C,EAF8C,CAG9C;;AAEA,QAAMD,WAAW,GAAID,QAAD,IAAc;AAChCM,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEV;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMW,aAAa,GAAIC,EAAD,IAAQ;AAC5BN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC9BR,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,WAAW,GAAID,OAAD,IAAa;AAC/BR,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GALD;;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFkB,GADH,CACO,gBADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;AACAC,MAAAA,IAAI,CAACC,OAAL,CAAcN,OAAD,IAAa;AACxBR,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAE,aADC;AAEPC,UAAAA,OAAO,EAAEI;AAFF,SAAD,CAAR;AAID,OALD;AAMD,KAVH,EAWGO,KAXH,CAWUC,KAAD,IAAWf,OAAO,CAACC,GAAR,CAAYc,KAAZ,CAXpB;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLtB,MAAAA,QAAQ,EAAEK,KAAK,CAACL,QADX;AAELW,MAAAA,aAFK;AAGLE,MAAAA,UAHK;AAILE,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGX,QARH,CADF;AAYD,CA5DM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst initialState = {\n  contacts: [],\n  setContacts: (contacts) => null,\n};\n\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, GlobalContext.contacts);\n  console.log(\"GlobalContext.contacts ==>\", GlobalContext);\n  // Actions\n\n  const setContacts = (contacts) => {\n    dispatch({\n      type: \"SET_CONTACTS\",\n      payload: contacts,\n    });\n  };\n\n  const removeContact = (id) => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id,\n    });\n  };\n\n  const addContact = (contact) => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  const editContact = (contact) => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"/contacts.json\")\n      .then((response) => {\n        const { data } = response;\n        data.forEach((contact) => {\n          dispatch({\n            type: \"ADD_CONTACT\",\n            payload: contact,\n          });\n        });\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        contacts: state.contacts,\n        removeContact,\n        addContact,\n        editContact,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}