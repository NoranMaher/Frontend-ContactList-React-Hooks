{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nconst initialState = {\n  contacts: {\n    contacts: [],\n    setContacts: () => {}\n  },\n  search: {\n    search: [],\n    setSearch: () => {}\n  }\n};\nexport const GlobalContext = createContext({\n  initialState\n}); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  useEffect(() => {\n    state.setSearch(search);\n  });\n  useEffect(() => {\n    console.log(state);\n    axios.get(\"/contacts.json\").then(response => state.setContacts(response.data)).catch(error => console.log(error));\n  }, []); // Actions\n\n  const removeContact = id => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id\n    });\n  };\n\n  const addContact = contact => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact\n    });\n  };\n\n  const editContact = contact => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      removeContact,\n      addContact,\n      editContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","initialState","contacts","setContacts","search","setSearch","GlobalContext","GlobalProvider","children","state","dispatch","console","log","get","then","response","data","catch","error","removeContact","id","type","payload","addContact","contact","editContact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AAAEA,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,WAAW,EAAE,MAAM,CAAE;AAArC,GADS;AAEnBC,EAAAA,MAAM,EAAE;AAAEA,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,SAAS,EAAE,MAAM,CAAE;AAAjC;AAFW,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGX,aAAa,CAAC;AAAEM,EAAAA;AAAF,CAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMM,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACG,UAAD,EAAaE,YAAb,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACJ,SAAN,CAAgBD,MAAhB;AACD,GAFQ,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAT,IAAAA,KAAK,CACFa,GADH,CACO,gBADP,EAEGC,IAFH,CAESC,QAAD,IAAcN,KAAK,CAACN,WAAN,CAAkBY,QAAQ,CAACC,IAA3B,CAFtB,EAGGC,KAHH,CAGUC,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAHpB;AAID,GANQ,EAMN,EANM,CAAT,CAP8C,CAe9C;;AAEA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5BV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,UAAU,GAAIC,OAAD,IAAa;AAC9Bd,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,WAAW,GAAID,OAAD,IAAa;AAC/Bd,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLtB,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADX;AAGLiB,MAAAA,aAHK;AAILI,MAAAA,UAJK;AAKLE,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGjB,QATH,CADF;AAaD,CAnDM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst initialState = {\n  contacts: { contacts: [], setContacts: () => {} },\n  search: { search: [], setSearch: () => {} },\n};\n\nexport const GlobalContext = createContext({ initialState });\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    state.setSearch(search);\n  });\n\n  useEffect(() => {\n    console.log(state);\n    axios\n      .get(\"/contacts.json\")\n      .then((response) => state.setContacts(response.data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  // Actions\n\n  const removeContact = (id) => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id,\n    });\n  };\n\n  const addContact = (contact) => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  const editContact = (contact) => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        contacts: state.contacts,\n\n        removeContact,\n        addContact,\n        editContact,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}