{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nimport { data } from \"jquery\";\n\nconst fetchData = () => {\n  axios.get(\"/contacts.json\").then(response => {\n    const data = response.data.data;\n    return data;\n  });\n}; // Initial State\n\n\nconsole.log(fetchData());\nconst initialState = {\n  contacts: []\n}; // Create Context\n\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  const getContacts = () => {\n    dispatch({\n      type: \"GET_CONTACTS\"\n    });\n  };\n\n  const removeContact = id => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id\n    });\n  };\n\n  const addContact = contact => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact\n    });\n  };\n\n  const editContact = contact => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      getContacts,\n      removeContact,\n      addContact,\n      editContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","data","fetchData","get","then","response","console","log","initialState","contacts","GlobalContext","GlobalProvider","children","state","dispatch","getContacts","type","removeContact","id","payload","addContact","contact","editContact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtBF,EAAAA,KAAK,CAACG,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AAC7C,UAAMJ,IAAI,GAAGI,QAAQ,CAACJ,IAAT,CAAcA,IAA3B;AACA,WAAOA,IAAP;AACD,GAHD;AAID,CALD,C,CAMA;;;AACAK,OAAO,CAACC,GAAR,CAAYL,SAAS,EAArB;AACA,MAAMM,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB,C,CAIA;;AACA,OAAO,MAAMC,aAAa,GAAGb,aAAa,CAACW,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACC,UAAD,EAAaS,YAAb,CAApC,CAD8C,CAG9C;;AACA,QAAMO,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5BJ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,gBADC;AAEPG,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAME,UAAU,GAAIC,OAAD,IAAa;AAC9BP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,aADC;AAEPG,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,WAAW,GAAID,OAAD,IAAa;AAC/BP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,cADC;AAEPG,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QADX;AAELM,MAAAA,WAFK;AAGLE,MAAAA,aAHK;AAILG,MAAAA,UAJK;AAKLE,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGV,QATH,CADF;AAaD,CA5CM","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nimport { data } from \"jquery\";\nconst fetchData = () => {\n  axios.get(\"/contacts.json\").then((response) => {\n    const data = response.data.data;\n    return data;\n  });\n};\n// Initial State\nconsole.log(fetchData());\nconst initialState = {\n  contacts: [],\n};\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  const getContacts = () => {\n    dispatch({\n      type: \"GET_CONTACTS\",\n    });\n  };\n\n  const removeContact = (id) => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id,\n    });\n  };\n\n  const addContact = (contact) => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  const editContact = (contact) => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        contacts: state.contacts,\n        getContacts,\n        removeContact,\n        addContact,\n        editContact,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}