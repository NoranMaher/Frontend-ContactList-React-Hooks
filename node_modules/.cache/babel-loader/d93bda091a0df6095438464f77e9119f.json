{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst ContactsContext = React.createContext();\n\nconst ContactsProvider = props => {\n  const [contacts, setContacts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState(\"\");\n\n  const fetchContacts = async () => {\n    try {\n      const contactsData = await axios.get(\"./contacts.json\");\n      setContacts(contactsData);\n      setLoading(false);\n    } catch (e) {\n      if (e) {\n        console.log(e.message, \"Try updating the API key in App.js\");\n      }\n    }\n  }; //   const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     try {\n  //       setLoading(true);\n  //       const searchUrl = `${url}&q=${search}`;\n  //       const searchedRecipeData = await fetch(searchUrl);\n  //       const { recipes } = await searchedRecipeData.json();\n  //       setRecipes(recipes);\n  //       setLoading(false);\n  //       setShowHomeButton(true);\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //   };\n  //   const handleSearchChange = (e) => {\n  //     setSearch(e.target.value);\n  //   };\n  //   const handleReturnHome = () => {\n  //     fetchRecipe();\n  //     setShowHomeButton(false);\n  //   };\n\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  return /*#__PURE__*/React.createElement(ContactsContext.Provider, {\n    value: {\n      loading,\n      // search,\n      // showHomeButton,\n      contacts // handleSearchChange,\n      // handleSubmit,\n      // handleReturnHome,\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nconst ContactsConsumer = ContactsContext.Consumer;\nexport { ContactsProvider, ContactsConsumer, ContactsContext };","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/index.js"],"names":["React","useState","useEffect","axios","ContactsContext","createContext","ContactsProvider","props","contacts","setContacts","loading","setLoading","search","setSearch","fetchContacts","contactsData","get","e","console","log","message","children","ContactsConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,eAAe,GAAGJ,KAAK,CAACK,aAAN,EAAxB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMa,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMC,YAAY,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,iBAAV,CAA3B;AAEAP,MAAAA,WAAW,CAACM,YAAD,CAAX;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD,CAKE,OAAOM,CAAP,EAAU;AACV,UAAIA,CAAJ,EAAO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd,EAAuB,oCAAvB;AACD;AACF;AACF,GAXD,CALkC,CAiBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,OADK;AAEL;AACA;AACAF,MAAAA,QAJK,CAKL;AACA;AACA;;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGD,KAAK,CAACc,QAXT,CADF;AAeD,CA1DD;;AA2DA,MAAMC,gBAAgB,GAAGlB,eAAe,CAACmB,QAAzC;AACA,SAASjB,gBAAT,EAA2BgB,gBAA3B,EAA6ClB,eAA7C","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst ContactsContext = React.createContext();\n\nconst ContactsProvider = (props) => {\n  const [contacts, setContacts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState(\"\");\n\n  const fetchContacts = async () => {\n    try {\n      const contactsData = await axios.get(\"./contacts.json\");\n\n      setContacts(contactsData);\n      setLoading(false);\n    } catch (e) {\n      if (e) {\n        console.log(e.message, \"Try updating the API key in App.js\");\n      }\n    }\n  };\n  //   const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     try {\n  //       setLoading(true);\n  //       const searchUrl = `${url}&q=${search}`;\n  //       const searchedRecipeData = await fetch(searchUrl);\n  //       const { recipes } = await searchedRecipeData.json();\n  //       setRecipes(recipes);\n  //       setLoading(false);\n  //       setShowHomeButton(true);\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //   };\n  //   const handleSearchChange = (e) => {\n  //     setSearch(e.target.value);\n  //   };\n  //   const handleReturnHome = () => {\n  //     fetchRecipe();\n  //     setShowHomeButton(false);\n  //   };\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return (\n    <ContactsContext.Provider\n      value={{\n        loading,\n        // search,\n        // showHomeButton,\n        contacts,\n        // handleSearchChange,\n        // handleSubmit,\n        // handleReturnHome,\n      }}\n    >\n      {props.children}\n    </ContactsContext.Provider>\n  );\n};\nconst ContactsConsumer = ContactsContext.Consumer;\nexport { ContactsProvider, ContactsConsumer, ContactsContext };\n"]},"metadata":{},"sourceType":"module"}