{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nconst initialState = {\n  contacts: []\n};\nexport const GlobalContext = createContext(initialState); // Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const [search, setSearch] = useState(\"\"); // Actions\n\n  useEffect(() => {\n    console.log(search);\n    setSearch(search);\n  }, [search]);\n\n  const getContacts = contacts => {\n    dispatch({\n      type: \"GET_CONTACTS\",\n      payload: contacts\n    });\n  };\n\n  const removeContact = id => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id\n    });\n  };\n\n  const addContact = contact => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact\n    });\n  };\n\n  const editContact = contact => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"/contacts.json\").then(response => {\n      const {\n        data\n      } = response;\n      getContacts(data);\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      search,\n      setSearch,\n      removeContact,\n      addContact,\n      editContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","initialState","contacts","GlobalContext","GlobalProvider","children","state","dispatch","search","setSearch","console","log","getContacts","type","payload","removeContact","id","addContact","contact","editContact","get","then","response","data","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACM,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACG,UAAD,EAAaE,YAAb,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC,CAF8C,CAG9C;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAHQ,EAGN,CAACA,MAAD,CAHM,CAAT;;AAKA,QAAMI,WAAW,GAAIV,QAAD,IAAc;AAChCK,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEZ;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMa,aAAa,GAAIC,EAAD,IAAQ;AAC5BT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC9BX,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,WAAW,GAAID,OAAD,IAAa;AAC/BX,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GALD;;AAOArB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFoB,GADH,CACO,gBADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;AACAV,MAAAA,WAAW,CAACW,IAAD,CAAX;AACD,KALH,EAOGC,KAPH,CAOUC,KAAD,IAAWf,OAAO,CAACC,GAAR,CAAYc,KAAZ,CAPpB;AAQD,GATQ,EASN,EATM,CAAT;AAWA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLvB,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QADX;AAELM,MAAAA,MAFK;AAGLC,MAAAA,SAHK;AAILM,MAAAA,aAJK;AAKLE,MAAAA,UALK;AAMLE,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGd,QAVH,CADF;AAcD,CA/DM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst initialState = {\n  contacts: [],\n};\n\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const [search, setSearch] = useState(\"\");\n  // Actions\n\n  useEffect(() => {\n    console.log(search);\n    setSearch(search);\n  }, [search]);\n\n  const getContacts = (contacts) => {\n    dispatch({\n      type: \"GET_CONTACTS\",\n      payload: contacts,\n    });\n  };\n\n  const removeContact = (id) => {\n    dispatch({\n      type: \"REMOVE_CONTACT\",\n      payload: id,\n    });\n  };\n\n  const addContact = (contact) => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  const editContact = (contact) => {\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: contact,\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"/contacts.json\")\n      .then((response) => {\n        const { data } = response;\n        getContacts(data);\n      })\n\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        contacts: state.contacts,\n        search,\n        setSearch,\n        removeContact,\n        addContact,\n        editContact,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}