{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Work/my-app/src/contacts/ContactsList.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const {\n    contacts,\n    getContacts\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    axios.get(\"/contacts.json\").then(response => {\n      const contactsData = response.data.data;\n      dispatch({\n        type: \"SET_POSTS\",\n        payload: postsData\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"SET_ERROR\",\n        payload: error\n      });\n    });\n  }, []); // const fetchData = () => {\n  //   axios.get(\"./contacts.json\").then(function (response) {\n  //     setContacts(response.data.data);\n  //   });\n  // };\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n  // useEffect(() => {\n  //   setUniqueLetters(\n  //     Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n  //   );\n  // }, [contacts]);\n\n  const handleFilter = event => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n\n  const {\n    data\n  } = useContext(GlobalContext);\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, uniqueLetters.map((letter, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      onClick: handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, letter);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, contacts.map((contactItem, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      userId: contactItem.id,\n      name: contactItem.fullName,\n      email: contactItem.emailAddress,\n      phone: contactItem.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default ContactList;","map":{"version":3,"sources":["/home/nouran/Work/my-app/src/contacts/ContactsList.js"],"names":["React","useEffect","useState","useContext","axios","Card","GlobalContext","ContactList","uniqueLetters","setUniqueLetters","searchText","setSearchText","loading","SetLoading","contacts","getContacts","get","then","response","contactsData","data","dispatch","type","payload","postsData","catch","error","handleFilter","event","selectedLetter","currentTarget","innerText","selectedContacts","filter","contactItem","fullName","charAt","setContacts","console","log","map","letter","i","id","emailAddress","phoneNumber"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../components/Card\";\nimport { GlobalContext } from \"../context/GlobalState\";\nconst ContactList = () => {\n  const [uniqueLetters, setUniqueLetters] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, SetLoading] = useState(false);\n  const { contacts, getContacts } = useContext(GlobalContext);\n\n  useEffect(() => {\n    axios\n      .get(\"/contacts.json\")\n      .then((response) => {\n        const contactsData = response.data.data;\n        dispatch({ type: \"SET_POSTS\", payload: postsData });\n      })\n      .catch((error) => {\n        dispatch({ type: \"SET_ERROR\", payload: error });\n      });\n  }, []);\n\n  // const fetchData = () => {\n  //   axios.get(\"./contacts.json\").then(function (response) {\n  //     setContacts(response.data.data);\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n\n  // useEffect(() => {\n  //   setUniqueLetters(\n  //     Array.from(new Set(contacts.map((name) => name.fullName.charAt(0))))\n  //   );\n  // }, [contacts]);\n\n  const handleFilter = (event) => {\n    const selectedLetter = event.currentTarget.innerText;\n    var selectedContacts = contacts.filter(function (contactItem) {\n      return contactItem.fullName.charAt(0) == selectedLetter;\n    });\n    setContacts(selectedContacts);\n  };\n  const { data } = useContext(GlobalContext);\n  console.log(data);\n\n  return (\n    <div className=\"contact-list\">\n      <ul>\n        {uniqueLetters.map((letter, i) => {\n          return (\n            <li key={i} onClick={handleFilter}>\n              {letter}\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"list-wrapper\">\n        {contacts.map((contactItem, i) => {\n          return (\n            <Card\n              key={i}\n              userId={contactItem.id}\n              name={contactItem.fullName}\n              email={contactItem.emailAddress}\n              phone={contactItem.phoneNumber}\n            ></Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}